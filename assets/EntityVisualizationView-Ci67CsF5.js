import{_ as Q,u as V,r as g,o as e,c as a,a as s,w as t,Q as L,F as _,b as y,d as h,e as d,f as o,g as E,t as u,h as p,i as b,j as w,k as F,l as k,m as x,n as T,p as j}from"./index-kbEpxEMD.js";const z={setup(){V();const i=g(""),l=g(null);return{filter:i,filterRef:l,resetFilter(){i.value="",l.value.focus()}}},data(){return{loading:!0,entities:[],id:null}},beforeMount(){this.entities=this.fetchData(),this.loading=!1},created(){let i=new URLSearchParams(window.location.search);this.id=i.get("id")},methods:{notify(i){this.$q.notify({color:"red",message:i,position:"top-right",icon:"error",timeout:1e3})},async fetchData(){try{const l=await fetch("entities.json",{method:"GET",headers:{"Content-Type":"application/json"}});if(!l.ok)throw new Error(`HTTP error! status: ${l.status}`);return this.entities=await l.json(),this.entities}catch{this.notify("Failed to fetch data")}},filteredCount(){return this.entities.entities.filter(i=>i.name.toLowerCase().includes(this.filter.toLowerCase())).length}}},I=o("h4",{class:"text-subtitle",style:{margin:"0 10px 10px 0"}},"Entities",-1),S=o("p",null," This is a list of all entities from your project. You can filter the list by typing in the input field below. ",-1),q={key:1,style:{"font-size":"16px"}},B={class:"q-pa-md example-row-all-breakpoints"},N={class:"row",style:{"font-style":"italic"}},P={class:"col",style:{"font-weight":"bold"}},D={key:0,class:"row"},R={class:"col"},U={class:"row",style:{"margin-top":"10px"}},G={class:"col"},H={key:0};function M(i,l,v,c,m,C){return e(),a(_,null,[I,S,s(L,{ref:"filterRef",filled:"",modelValue:c.filter,"onUpdate:modelValue":l[0]||(l[0]=n=>c.filter=n),label:"Filter"},{append:t(()=>[c.filter!==""?(e(),h(E,{key:0,name:"clear",class:"cursor-pointer",onClick:c.resetFilter},null,8,["onClick"])):d("",!0),m.entities.entities?(e(),a("div",q," Found "+u(C.filteredCount())+" entities ",1)):d("",!0)]),_:1},8,["modelValue"]),(e(!0),a(_,null,y(m.entities.entities,n=>(e(),a("div",{key:n.name},[n.name.toLowerCase().includes(c.filter.toLowerCase())?(e(),h(x,{key:0,flat:"",bordered:"",class:"q-ma-md"},{default:t(()=>[s(w,null,{default:t(()=>[s(p,null,{default:t(()=>[s(b,{label:n.name,"header-class":"text-h6",dense:"","switch-toggle-side":"",style:{"font-size":"16px"}},{default:t(()=>[s(w,null,{default:t(()=>[s(p,null,{default:t(()=>[s(F,{bordered:"",class:"rounded-borders",style:{margin:"10px 0"},separator:""},{default:t(()=>[(e(!0),a(_,null,y(n.instances,r=>(e(),h(w,{key:r.identifier},{default:t(()=>[s(p,null,{default:t(()=>[o("div",B,[o("div",N,[o("div",P,u(r.identifier),1),k(" "+u(r.from_file),1)]),r.description?(e(),a("div",D,[o("div",R,"( "+u(r.description)+" )",1)])):d("",!0),o("div",U,[o("div",G,[s(x,{flat:"",bordered:""},{default:t(()=>[s(b,{label:`Properties ( ${r.properties.length} )`,dense:"","switch-toggle-side":"",style:{"font-size":"16px"},"content-inset-level":1},{default:t(()=>[s(T),(e(!0),a(_,null,y(r.properties,f=>(e(),a("div",{key:f.name},[s(p,null,{default:t(()=>[k(u(f.name)+" ",1),f.description?(e(),a("span",H," ( "+u(f.description)+" ) ",1)):d("",!0)]),_:2},1024)]))),128))]),_:2},1032,["label"])]),_:2},1024)])])])]),_:2},1024)]),_:2},1024))),128))]),_:2},1024)]),_:2},1024)]),_:2},1024)]),_:2},1032,["label"])]),_:2},1024)]),_:2},1024)]),_:2},1024)):d("",!0)]))),128)),m.loading?(e(),h(j,{key:0,color:"primary",size:"3em",style:{position:"absolute",height:"30vh",left:"50%"}})):d("",!0)],64)}const Y=Q(z,[["render",M]]),A={class:"q-pa-md"},K={__name:"EntityVisualizationView",setup(i){return(l,v)=>(e(),a("main",A,[s(Y)]))}};export{K as default};
