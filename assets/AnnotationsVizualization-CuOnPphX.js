import{r as u,o as l,a,b as o,Q as h,d as y,w as r,e as b,F as f,f as g,g as s,h as m,i as p,j as v,k as c,t as _,l as A,m as k,u as w,n as N,q as C}from"./index-DopC3xOt.js";import{i as F,e as S}from"./Utils-QccLCyp7.js";import{s as V}from"./annotations.schema-B16H-bTF.js";import{_ as I}from"./_plugin-vue_export-helper-DlAUqK2U.js";const Q=[{name:"line",align:"center",label:"Line",field:"lineNumber",sortable:!0,style:"width: 30px"},{name:"name",align:"left",label:"Name",field:"name",sortable:!0},{name:"value",align:"left",label:"Value",field:"value",sortable:!0,format:e=>e||"N/A"}],q={setup(){const e=u(""),t=u(null);let n=u(null);return n=new FileReader,n.onload=function(){if(console.log(n.result),n.result)try{const d=JSON.parse(n.result);localStorage.setItem("annotations",JSON.stringify(d))}catch(d){console.log(d)}},n.onerror=function(){console.log(n.error)},{filter:e,filterRef:t,columns:Q,reader:n,resetFilter(){e.value="",t.value.focus()}}},data(){return{isLoadedNewAnnotations:!1,entities:{}}},async beforeMount(){localStorage.getItem("annotations")&&(this.entities=JSON.parse(localStorage.getItem("annotations")),this.validateCurrentAnnotations())},methods:{filtredAnnotations(e){return e.filter(t=>t.value===null?!1:t.value.toLowerCase().includes(this.filter.toLowerCase()))},filteredCount(){return this.entities.filesAnnotations.reduce((e,t)=>e+this.filtredAnnotations(t.annotations).length,0)},updateFile(e){this.reader.readAsText(e),window.location.reload()},clearEntities(){localStorage.removeItem("annotations"),window.location.reload()},validateCurrentAnnotations(){const e=F(this.entities,V);e!==null&&(S("Annotations are not valid: "+e),localStorage.removeItem("annotations"))}}},J=s("div",{class:"q-pa-md"},[s("h4",{class:"text-subtitle",style:{margin:"0 10px 10px 0"}},"Annotations"),s("p",{class:"text-body1"}," This is a list of all annotations from your project files, displayed line by line. You can filter the list by typing in the input field below. ")],-1),L={key:0,class:"q-ma-md"},$=s("p",{class:"text-body1"},[m(" You can upload a JSON file containing entities. The file should have the following format ("),s("a",{href:"/annotations/schema"},"JSON schema"),m("): ")],-1),z=s("pre",null,`      {
        "filesAnnotations": [
          {
            "relativeFilePath": "File path",
            "annotations": [
              {
                "lineNumber": 1,
                "annotation": "Annotation text"
                "value": "Annotation value"
              }
            ]
          }
        ]
    `,-1),B={key:1,class:"q-ma-md"},O=s("p",null,"No entities found",-1),T=[O],x={key:2},E={key:1,style:{"font-size":"16px"}};function U(e,t,n,d,P,Y){return l(),a(f,null,[J,e.entities.filesAnnotations?e.entities.filesAnnotations.length===0?(l(),a("div",B,T)):(l(),a("div",x,[o(y,{color:"primary",label:"Clear entities",class:"q-ml-md",onClick:e.clearEntities},null,8,["onClick"]),o(b,{ref:"filterRef",filled:"",modelValue:e.filter,"onUpdate:modelValue":t[0]||(t[0]=i=>e.filter=i),label:"Filter by value",class:"q-ma-md"},{append:r(()=>[e.filter!==""?(l(),p(v,{key:0,name:"clear",class:"cursor-pointer",onClick:e.resetFilter},null,8,["onClick"])):c("",!0),e.entities.filesAnnotations?(l(),a("div",E," Found "+_(e.filteredCount())+" annotations ",1)):c("",!0)]),_:1},8,["modelValue"]),(l(!0),a(f,null,g(e.entities.filesAnnotations,i=>(l(),a("div",{key:i.identifier},[e.filtredAnnotations(i.annotations).length>0?(l(),p(C,{key:0,flat:"",bordered:"",class:"q-ma-md"},{default:r(()=>[o(N,null,{default:r(()=>[o(A,null,{default:r(()=>[o(k,{label:i.relativeFilePath,"header-class":"text-h6",dense:"","switch-toggle-side":"",style:{"font-size":"16px"}},{default:r(()=>[s("div",null,[o(w,{class:"my-sticky-virtscroll-table",dense:"","virtual-scroll":"",flat:"","rows-per-page-options":[0],"virtual-scroll-sticky-size-start":48,"row-key":"lineNumber",rows:e.filtredAnnotations(i.annotations),columns:e.columns},null,8,["rows","columns"])])]),_:2},1032,["label"])]),_:2},1024)]),_:2},1024)]),_:2},1024)):c("",!0)]))),128))])):(l(),a("div",L,[$,z,o(h,{"onUpdate:modelValue":e.updateFile,clearable:"",filled:"",label:"Upload",class:"q-ma-md"},null,8,["onUpdate:modelValue"])]))],64)}const R=I(q,[["render",U]]),j={class:"q-pa-md"},K={__name:"AnnotationsVizualization",setup(e){return(t,n)=>(l(),a("main",j,[o(R)]))}};export{K as default};
